// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id     String  @id @default(cuid())
  name   String?
  email  String? @unique
  boards Board[]
  avatar Avatar?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // WIP
  role UserRole @default(USER)
}

enum UserRole {
  ADMIN
  USER
}

model Avatar {
  id    String  @id
  user  User    @relation(fields: [id], references: [id])
  image String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Board {
  id      String   @id @default(cuid())
  users   User[]
  title   String
  columns Column[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Column {
  id      String  @id @default(cuid())
  board   Board?  @relation(fields: [boardId], references: [id])
  boardId String?
  title   String
  tasks   Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // WIP
  position Int?
}

model Task {
  id          String    @id @default(cuid())
  column      Column?   @relation(fields: [columnId], references: [id])
  columnId    String?
  title       String
  description String?
  subtasks    Subtask[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // WIP
  position Int?
}

model Subtask {
  id          String  @id @default(cuid())
  task        Task?   @relation(fields: [taskId], references: [id])
  taskId      String?
  title       String
  isCompleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // WIP
  position Int?
}
